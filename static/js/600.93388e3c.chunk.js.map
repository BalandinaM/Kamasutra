{"version":3,"file":"static/js/600.93388e3c.chunk.js","mappings":"wJACA,QAA0B,yBAA1B,EAA0D,sBCA1D,GAAgB,KAAO,0BAA0B,OAAS,4BAA4B,IAAM,0B,sBCG5F,MAaA,EAboBA,IAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAEC,KAAKC,UACpBC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACL,UAAcM,GAAUA,EAAOC,SAAWN,EAAEO,OAAS,GAAKC,GAAIZ,EAAKM,SAAA,EAC1EJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAES,IAAKC,IAAKf,EAAMgB,QAASC,IAAK,4BAAQjB,EAAMkB,WAAYC,MAAM,KAAKC,OAAO,QAC5FjB,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAEa,SAASX,SAAEP,EAAMkB,eAEhC,ECZT,EAA0B,yBCQ1B,EANiBlB,IAEbG,EAAAA,EAAAA,KAAA,OAAKC,UAAWiB,EAAUd,SAAEP,EAAMsB,UCWtC,EAXctB,IAEZ,IAAIuB,EAAYvB,EAAMwB,SAASC,KAAIC,IAAKvB,EAAAA,EAAAA,KAACwB,EAAO,CAACL,QAASI,EAAEJ,SAAcI,EAAExB,MAE5E,OACEC,EAAAA,EAAAA,KAAA,OAAAI,SACMgB,GACA,ECeV,EArBiBvB,IAEf,IAAI4B,EAAkB5B,EAAM6B,YAAYC,YAAYL,KAAIpB,IAAKF,EAAAA,EAAAA,KAAC4B,EAAU,CAACb,SAAUb,EAAE2B,KAAiB9B,GAAIG,EAAEH,GAAIc,QAASX,EAAEW,SAA3BX,EAAEH,MAOlG,OACEM,EAAAA,EAAAA,MAAA,WAASJ,UAAWC,EAAUE,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOE,SAClBqB,KAGJzB,EAAAA,EAAAA,KAAC8B,EAAI,CAACT,SAAYxB,EAAM6B,YAAYL,aAE5B,E,oBCHd,SAAeU,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfqBC,IACd,CACLP,YAAaO,EAAMP,gBAIGQ,IACjB,CACLC,YAAcC,IACZF,GAASG,EAAAA,EAAAA,GAAwBD,GAAY,MAOjDE,EAAAA,EAFF,CAGEC,E","sources":["webpack://my-app/./src/components/dialogs/dialogs.module.css?c5d1","webpack://my-app/./src/components/dialogs/dialogsItem/dialogsItem.module.css?341a","components/dialogs/dialogsItem/dialogsItem.jsx","webpack://my-app/./src/components/dialogs/talk/message/message.module.css?3ed0","components/dialogs/talk/message/message.jsx","components/dialogs/talk/talk.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__Od7-m\",\"list\":\"dialogs_list__VDkig\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"dialogsItem_item__t1G5I\",\"active\":\"dialogsItem_active__BaqvL\",\"img\":\"dialogsItem_img__+peYj\"};","import React from 'react';\nimport d from './dialogsItem.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  let path = '/dialogs/' + props.id;\n\n  return (\n    <li className={d.item}>\n      <NavLink className = { dialog => dialog.isActive ? d.active : '' } to={path}>\n        <img className={d.img} src={props.hrefImg} alt={`Фото ${props.userName}`} width='40' height='40' />\n        <p className={d.userName}>{props.userName}</p>\n      </ NavLink>\n    </li>\n  )\n}\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"message_message__2bLy6\"};","import React from 'react';\nimport t from './message.module.css'\n\nconst Message = (props) => {\n  return (\n    <div className={t.message}>{props.message}</div>\n  )\n}\n\nexport default Message;\n","import React from 'react';\n//import t from './talk.module.css'\nimport Message from './message/message';\n\n\nconst Talk = (props) => {\n\n  let postElems = props.postData.map(p => <Message message={p.message} key={p.id}/>);\n\n  return (\n    <div>\n        { postElems }\n    </div>\n  )\n}\n\nexport default Talk;\n","import React from 'react';\nimport d from './dialogs.module.css'\nimport DialogItem from './dialogsItem/dialogsItem';\nimport Talk from './talk/talk';\n//import NewMessageReduxForm from './newMessage/newMessage';\n\nconst Dialogs = (props) => {\n  //debugger;\n  let dialogsElements = props.dialogsPage.dialogsData.map(d => <DialogItem userName={d.name} key={d.id} id={d.id} hrefImg={d.hrefImg}/>);\n\n  const addMessage = (value) => {\n    props.sendMessage(value.messageNewText);\n    console.log(value.messageNewText);\n  }\n\n  return (\n    <section className={d.dialogs}>\n      <ul className={d.list}>\n        { dialogsElements }\n      </ul>\n      {/* Диалог с конкретным пользователем */}\n      <Talk postData = {props.dialogsPage.postData}/>\n      {/* <NewMessageReduxForm onSubmit={addMessage}/> */}\n    </section>\n  )\n}\n\nexport default Dialogs;\n","import { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport Dialogs from './dialogs';\nimport { connect } from 'react-redux';\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessage) => {\n      dispatch(addMessageActionCreator(newMessage))\n    },\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n\n"],"names":["props","path","id","_jsx","className","d","item","children","_jsxs","NavLink","dialog","isActive","active","to","img","src","hrefImg","alt","userName","width","height","t","message","postElems","postData","map","p","Message","dialogsElements","dialogsPage","dialogsData","DialogItem","name","Talk","compose","connect","state","dispatch","sendMessage","newMessage","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}